# DB ì¤ì  (hikari CPë ?)
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#spring.datasource.hikari.username=hr
#spring.datasource.hikari.password=spring
#spring.datasource.hikari.connection-timeout=10000
#spring.datasource.hikari.validation-timeout=10000
#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

###############################
# DB ì¤ì  (logì¶ë ¥)
###############################
#spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:XE
#spring.datasource.hikari.username=hr
#spring.datasource.hikari.password=spring
#spring.datasource.hikari.connection-timeout=10000
#spring.datasource.hikari.validation-timeout=10000
#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL


spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.hikari.jdbc-url=jdbc:mysql://114.71.137.172:46061/data_db?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&autoReconnect=true
spring.datasource.hikari.jdbc-url=jdbc:mysql://114.71.137.174:61083/testdb_a?characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useSSL=false
spring.datasource.hikari.username=phm
spring.datasource.hikari.password=inha123!
#spring.datasource.hikari.connection-test-query=SELECT NOW() FROM dual


###############################
# í¬í¸ ì¤ì 
###############################
server.port=18080
#server.address=student

###############################
# ì¹´ë© íê¸°ë² ì¤ì  - Mybatis
###############################
# ì¸ëë° ë¤ì ìëì¼ë¡ ë§¤íí´ì¤
#mybatis.configuration.map-underscore-to-camel-case=true  

# íë©´, ë¦¬ìì¤ cache ì¤ì  
# false -> ì¬ìì ìì´ ìë¡ê³ ì¹¨ë§ì¼ë¡ ë°ìë¨
spring.thymeleaf.cache=false 
#spring.resources.cache.period=0

###############################
# JPA ì¤ì 
############################### 
## ìëì¼ë¡ ì²ë¦¬í  DDL ì¢ë¥ ì í
# createë ì²ììë§ íë©´ ë¨ ê·¸ ë¤ìì update
#spring.jpa.hibernate.ddl-auto=create 
spring.jpa.hibernate.ddl-auto=update

# ì¿¼ë¦¬ ê´ë ¨ ë´ì©ì sql formteì ì¡ìì ë³´ì¬ì¤ / comment ë³´ì¬ì¤
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true


#spring.jpa.database=oracle
# spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

## DDL 정의시 데이터베이스의 고유 기능을 사용
spring.jpa.generate-ddl=true
## API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.show_sql=true
# MySQL을 사용할 것
spring.jpa.database=mysql

## SQL ë¡ê·¸ ì¤(descriptor)
logging.level.org.hibernate.type.descriptor.sql=trace

## íì´ë²ë¤ì´í¸ì ìì¤ë£¬ ID ìì± ìµììì ì¬ì© ì¬ë¶ ì¤ì 
spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

## 보안 로그 레벨 설정
logging.level.org.springframework.security = debug

#spring.security.user.name=admin
#spring.security.user.password=1234

spring.jpa.properties.hibernate.hbm2ddl.import_files=classpath:sql/init-import.sql
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
